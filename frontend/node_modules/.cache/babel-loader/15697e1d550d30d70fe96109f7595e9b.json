{"ast":null,"code":"var _jsxFileName = \"/Users/preyaporn/Documents/GitHub/FSIM/frontend/src/Components/Login.js\";\nimport React, { Component } from \"react\";\nimport { Form, Container, Transition, Label, Input } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nclass Login extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     username: \"\",\n  //     password: \"\",\n  //     loginErrors: {}\n  //   };\n  //   this.handleSubmit = this.onSubmit.bind(this);\n  //   // this.handleChange = this.onInputChange.bind(this);\n  //   this.validator = new SimpleReactValidator({\n  //     validators: {\n  //       error: {\n  //         message: \"ชื่อผู้ใช้หรือรหัสผ่านผิด\",\n  //         rule: val => val == null\n  //       }\n  //     },\n  //     element: message => (\n  //       <div>\n  //         <Transition animation=\"shake\" duration={250} transitionOnMount={true}>\n  //           <Label basic color=\"red\" pointing>\n  //             {message}\n  //           </Label>\n  //         </Transition>\n  //         <br />\n  //       </div>\n  //     ),\n  //     message: {\n  //       required: \"โปรดระบุ:attribute\"\n  //     }\n  //   });\n  // }\n  // componentDidMount() {\n  //   document.title = \"FSIM - Login\";\n  //   // document.body.classList.add('Background-Brown');\n  //   if (this.props.location.state) {\n  //     // this.handleRegistModal();\n  //     this.props.history.replace({ state: false });\n  //   }\n  //   if (this.props.auth.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //   }\n  // }\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.auth.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //     // document.body.classList.remove('Background-Brown');\n  //   }\n  //   if (nextProps.errors) {\n  //     this.setState({ errors: nextProps.errors });\n  //   }\n  // }\n  // handleChange = input => e => {\n  //   this.setState({ [input]: e.target.value });\n  // };\n  // onSubmit(e) {\n  //   if (\n  //     this.validator.fieldValid(\"รหัสผ่าน\") &&\n  //     this.validator.fieldValid(\"ชื่อผู้ใช้\")\n  //   ) {\n  //     e.preventDefault();\n  //     // this.handleLoaderModal();\n  //     const userData = {\n  //       username: this.state.username,\n  //       password: this.state.password\n  //     };\n  //     this.props.loginUser(userData);\n  //     this.validator.showMessages();\n  //   } else {\n  //     this.validator.showMessages();\n  //     // rerender to show messages for the first time\n  //     // you can use the autoForceUpdate option to do this automatically`\n  //     this.forceUpdate();\n  //   }\n  // }\n  // onInputChange = event => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value\n  //   });\n  //   console.log(this.state);\n  // };\n  // onLoginSubmit = event => {\n  //   const { username, password } = this.state;\n  //   axios\n  //     .post(\n  //       \"http://localhost:3000\",\n  //       {\n  //         user: {\n  //           username: username,\n  //           password: password\n  //         }\n  //       },\n  //       {\n  //         withCredentials: true\n  //       }\n  //     )\n  //     .then(response => {\n  //       if (response.data.logged_in) {\n  //         this.props.handleSuccessfulAuth(response.data);\n  //       }\n  //     })\n  //     .catch(error => {\n  //       console.log(\"login error\", error);\n  //     });\n  //   event.preventDefault();\n  // };\n  render() {\n    // const { values } = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"card-login my-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"formGroupEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Username\",\n      name: \"username\" // value={this.state.username}\n      // onChange={this.handleChange('username')}\n      // defaultValue={this.state.username}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formGroupPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password\" // value={this.state.password}\n      // onChange={this.handleChange('password')}\n      // defaultValue={this.state.password}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), [\"checkbox\"].map(type => React.createElement(\"div\", {\n      key: `default-${type}`,\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Form.Checkbox, {\n      type: \"checkbox\",\n      label: \"Confirm\",\n      name: \"Confirm\",\n      id: \"Confirm\",\n      onChange: this.onInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.onSubmit,\n      className: \"btn btn-success center-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger center-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"\\u0E22\\u0E49\\u0E2D\\u0E19\\u0E01\\u0E25\\u0E31\\u0E1A\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/preyaporn/Documents/GitHub/FSIM/frontend/src/Components/Login.js"],"names":["React","Component","Form","Container","Transition","Label","Input","axios","SimpleReactValidator","Login","render","map","type","onInputChange","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,KAAtC,EAA4CC,KAA5C,QAAyD,mBAAzD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,KAAN,SAAoBR,SAApoBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,IAAI,EAAC,UAHP,CAIE;AACA;AACA;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,EAmBE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,WAAW,EAAC,UAFd;AAGE,MAAA,IAAI,EAAC,UAHP,CAIE;AACA;AACA;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAnBF,EA+CE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF,EAgDG,CAAC,UAAD,EAAaC,GAAb,CAAiBC,IAAI,IACpB;AAAK,MAAA,GAAG,EAAG,WAAUA,IAAK,EAA1B;AAA6B,MAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,QAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,IAAI,EAAC,SAHP;AAIE,MAAA,EAAE,EAAC,SAJL;AAKE,MAAA,QAAQ,EAAE,KAAKC,aALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CAhDH,EA4DE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKC,QAApC;AAA8C,MAAA,SAAS,EAAC,8BAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EA5DF,EA+DE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,6BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DA/DF,EAmEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnEF,CADF,CADF,CADF,CADF;AA6ED;;AAnM2B;;AAsM9B,eAAeL,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Container, Transition, Label,Input } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass Login extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     username: \"\",\r\n  //     password: \"\",\r\n  //     loginErrors: {}\r\n  //   };\r\n\r\n  //   this.handleSubmit = this.onSubmit.bind(this);\r\n  //   // this.handleChange = this.onInputChange.bind(this);\r\n  //   this.validator = new SimpleReactValidator({\r\n  //     validators: {\r\n  //       error: {\r\n  //         message: \"ชื่อผู้ใช้หรือรหัสผ่านผิด\",\r\n  //         rule: val => val == null\r\n  //       }\r\n  //     },\r\n  //     element: message => (\r\n  //       <div>\r\n  //         <Transition animation=\"shake\" duration={250} transitionOnMount={true}>\r\n  //           <Label basic color=\"red\" pointing>\r\n  //             {message}\r\n  //           </Label>\r\n  //         </Transition>\r\n  //         <br />\r\n  //       </div>\r\n  //     ),\r\n  //     message: {\r\n  //       required: \"โปรดระบุ:attribute\"\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   document.title = \"FSIM - Login\";\r\n  //   // document.body.classList.add('Background-Brown');\r\n  //   if (this.props.location.state) {\r\n  //     // this.handleRegistModal();\r\n  //     this.props.history.replace({ state: false });\r\n  //   }\r\n  //   if (this.props.auth.isAuthenticated) {\r\n  //     this.props.history.push(\"/\");\r\n  //   }\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.auth.isAuthenticated) {\r\n  //     this.props.history.push(\"/\");\r\n  //     // document.body.classList.remove('Background-Brown');\r\n  //   }\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n  // }\r\n\r\n  // handleChange = input => e => {\r\n  //   this.setState({ [input]: e.target.value });\r\n  // };\r\n\r\n  // onSubmit(e) {\r\n  //   if (\r\n  //     this.validator.fieldValid(\"รหัสผ่าน\") &&\r\n  //     this.validator.fieldValid(\"ชื่อผู้ใช้\")\r\n  //   ) {\r\n  //     e.preventDefault();\r\n  //     // this.handleLoaderModal();\r\n  //     const userData = {\r\n  //       username: this.state.username,\r\n  //       password: this.state.password\r\n  //     };\r\n  //     this.props.loginUser(userData);\r\n  //     this.validator.showMessages();\r\n  //   } else {\r\n  //     this.validator.showMessages();\r\n  //     // rerender to show messages for the first time\r\n  //     // you can use the autoForceUpdate option to do this automatically`\r\n  //     this.forceUpdate();\r\n  //   }\r\n  // }\r\n\r\n  // onInputChange = event => {\r\n  //   this.setState({\r\n  //     [event.target.name]: event.target.value\r\n  //   });\r\n  //   console.log(this.state);\r\n  // };\r\n\r\n  // onLoginSubmit = event => {\r\n  //   const { username, password } = this.state;\r\n\r\n  //   axios\r\n  //     .post(\r\n  //       \"http://localhost:3000\",\r\n  //       {\r\n  //         user: {\r\n  //           username: username,\r\n  //           password: password\r\n  //         }\r\n  //       },\r\n  //       {\r\n  //         withCredentials: true\r\n  //       }\r\n  //     )\r\n  //     .then(response => {\r\n  //       if (response.data.logged_in) {\r\n  //         this.props.handleSuccessfulAuth(response.data);\r\n  //       }\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(\"login error\", error);\r\n  //     });\r\n  //   event.preventDefault();\r\n  // };\r\n\r\n  render() {\r\n    // const { values } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Container>\r\n          <form>\r\n            <section className=\"card-login my-5\">\r\n              <br />\r\n              <h3>เข้าสู่ระบบ</h3>\r\n              <hr />\r\n              <Form.Group controlId=\"formGroupEmail\">\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  name=\"username\"\r\n                  // value={this.state.username}\r\n                  // onChange={this.handleChange('username')}\r\n                  // defaultValue={this.state.username}\r\n                />\r\n                {/* {this.validator.message(\r\n                  \"ชื่อผู้ใช้\",\r\n                  this.state.username,\r\n                  \"required\"\r\n                )} */}\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formGroupPassword\">\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  // value={this.state.password}\r\n                  // onChange={this.handleChange('password')}\r\n                  // defaultValue={this.state.password}\r\n                />\r\n                {/* {this.validator.message(\r\n                  \"รหัสผ่าน\",\r\n                  this.state.password,\r\n                  \"required\"\r\n                )}\r\n                {this.validator.message(\r\n                  \"errors\",\r\n                  this.state.errors.username,\r\n                  \"error\"\r\n                )}\r\n                {this.validator.message(\r\n                  \"errors\",\r\n                  this.state.errors.password,\r\n                  \"error\"\r\n                )}\r\n                {console.log(\r\n                  this.state.errors.username + \" \" + this.state.errors.password\r\n                )} */}\r\n              </Form.Group>\r\n              <hr />\r\n              {[\"checkbox\"].map(type => (\r\n                <div key={`default-${type}`} className=\"mb-3\">\r\n                  <Form.Checkbox\r\n                    type=\"checkbox\"\r\n                    label=\"Confirm\"\r\n                    name=\"Confirm\"\r\n                    id=\"Confirm\"\r\n                    onChange={this.onInputChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <button type=\"submit\" onClick={this.onSubmit} className=\"btn btn-success center-block\">\r\n                เข้าสู่ระบบ\r\n              </button>\r\n              <button type=\"button\" className=\"btn btn-danger center-block\">\r\n                ย้อนกลับ\r\n              </button>\r\n\r\n              <br />\r\n            </section>\r\n          </form>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}