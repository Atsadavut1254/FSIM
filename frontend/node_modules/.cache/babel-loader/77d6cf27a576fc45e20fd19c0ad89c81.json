{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\FSIM\\\\frontend\\\\src\\\\Components\\\\UploadForm.js\";\nimport React, { Component } from 'react';\nimport ApiManage from \"../Class/ApiManage\";\nimport { icons } from \"react-icons\";\n\nclass UploadForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const data = new FormData();\n      const target = event.target;\n      let year = target[0].value;\n      let type = target[1].value;\n      let channael = target[2].value;\n      data.append(\"year\", year);\n      data.append(\"admission_type\", type);\n      data.append(\"admission_channel\", channael);\n      ApiManage.post(\"admission\", data).then(res => {\n        console.log(res);\n      }).then(error => {\n        console.log(error);\n      }).catch(error => {\n        console.log(error.response.data.message);\n        console.log(error.response.data.value);\n      });\n    };\n\n    this.state = {\n      data: \"\",\n      isLoaded: false,\n      selectedFile: null,\n      year: 2560\n    };\n    this.fileInput = React.createRef();\n  }\n\n  componentDidMount() {\n    ApiManage.get('admission/2560/1/1').then(res => {\n      let receive_data = res.data;\n\n      if (receive_data.response === true) {\n        this.setState({\n          data: receive_data.data,\n          isLoaded: true\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        data = _this$state.data,\n        year = _this$state.year;\n    let show_data;\n\n    if (isLoaded) {\n      show_data = data.map(data => {\n        const firstname = data.firstname,\n              lastname = data.lastname;\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, firstname, \" -- \", lastname);\n      });\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, year, show_data, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"year\",\n      id: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"type\",\n      id: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"channel\",\n      id: \"channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UploadForm;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/FSIM/frontend/src/Components/UploadForm.js"],"names":["React","Component","ApiManage","icons","UploadForm","constructor","props","handleSubmit","event","preventDefault","data","FormData","target","year","value","type","channael","append","post","then","res","console","log","error","catch","response","message","state","isLoaded","selectedFile","fileInput","createRef","componentDidMount","get","receive_data","setState","render","show_data","map","firstname","lastname"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\r\n\r\nimport ApiManage from \"../Class/ApiManage\";\r\nimport {icons} from \"react-icons\";\r\n\r\n\r\nclass UploadForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: \"\",\r\n            isLoaded: false,\r\n            selectedFile: null,\r\n            year: 2560\r\n        };\r\n\r\n        this.fileInput = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApiManage.get('admission/2560/1/1')\r\n            .then(res => {\r\n                let receive_data = res.data;\r\n                if (receive_data.response === true) {\r\n                    this.setState({\r\n                        data: receive_data.data,\r\n                        isLoaded: true\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    handleSubmit = event =>{\r\n        event.preventDefault();\r\n        const data = new FormData();\r\n        const target = event.target;\r\n        let year = target[0].value\r\n        let type = target[1].value\r\n        let channael = target[2].value\r\n\r\n        data.append(\"year\", year);\r\n        data.append(\"admission_type\", type);\r\n        data.append(\"admission_channel\", channael);\r\n\r\n        ApiManage.post(\"admission\", data)\r\n            .then(res => {\r\n                console.log(res)\r\n            })\r\n            .then(error => {\r\n                console.log(error)\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data.message);\r\n                console.log(error.response.data.value);\r\n            })\r\n    };\r\n\r\n    render() {\r\n        let {isLoaded, data, year} = this.state;\r\n\r\n        let show_data;\r\n\r\n        if (isLoaded) {\r\n            show_data = data.map(data => {\r\n                const {firstname, lastname} = data;\r\n                return (\r\n                    <p>{firstname} -- {lastname}</p>\r\n                )\r\n            })\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {year}\r\n                {show_data}\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"year\" id=\"year\"/>\r\n                    <input type=\"text\" name=\"type\" id=\"type\"/>\r\n                    <input type=\"text\" name=\"channel\" id=\"channel\"/>\r\n                    <button type=\"submit\">Submit</button>\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UploadForm"]},"metadata":{},"sourceType":"module"}