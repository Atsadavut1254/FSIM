{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kim\\\\Documents\\\\GitHub\\\\FSIM\\\\frontend\\\\src\\\\Components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Form, Container, Button, Icon, Input, Grid, Modal, Loader, Responsive, Header, Divider } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport SimpleReactValidator from \"simple-react-validator\";\n\nclass Login extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     username: \"\",\n  //     password: \"\",\n  //     loginErrors: {}\n  //   };\n  //   this.handleSubmit = this.onSubmit.bind(this);\n  //   // this.handleChange = this.onInputChange.bind(this);\n  //   this.validator = new SimpleReactValidator({\n  //     validators: {\n  //       error: {\n  //         message: \"ชื่อผู้ใช้หรือรหัสผ่านผิด\",\n  //         rule: val => val == null\n  //       }\n  //     },\n  //     element: message => (\n  //       <div>\n  //         <Transition animation=\"shake\" duration={250} transitionOnMount={true}>\n  //           <Label basic color=\"red\" pointing>\n  //             {message}\n  //           </Label>\n  //         </Transition>\n  //         <br />\n  //       </div>\n  //     ),\n  //     message: {\n  //       required: \"โปรดระบุ:attribute\"\n  //     }\n  //   });\n  // }\n  // componentDidMount() {\n  //   // document.title = \"FSIM - Login\";\n  //   // document.body.classList.add('Background-Brown');\n  //   if (this.props.location.state) {\n  //     // this.handleRegistModal();\n  //     this.props.history.replace({ state: false });\n  //   }\n  //   if (this.props.auth.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //   }\n  // }\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.auth.isAuthenticated) {\n  //     this.props.history.push(\"/\");\n  //     // document.body.classList.remove('Background-Brown');\n  //   }\n  //   if (nextProps.errors) {\n  //     this.setState({ errors: nextProps.errors });\n  //   }\n  // }\n  // handleChange = input => e => {\n  //   this.setState({ [input]: e.target.value });\n  // };\n  // onSubmit(e) {\n  //   if (\n  //     this.validator.fieldValid(\"รหัสผ่าน\") &&\n  //     this.validator.fieldValid(\"ชื่อผู้ใช้\")\n  //   ) {\n  //     e.preventDefault();\n  //     // this.handleLoaderModal();\n  //     const userData = {\n  //       username: this.state.username,\n  //       password: this.state.password\n  //     };\n  //     this.props.loginUser(userData);\n  //     this.validator.showMessages();\n  //   } else {\n  //     this.validator.showMessages();\n  //     // rerender to show messages for the first time\n  //     // you can use the autoForceUpdate option to do this automatically`\n  //     this.forceUpdate();\n  //   }\n  // }\n  // onInputChange = event => {\n  //   this.setState({\n  //     [event.target.name]: event.target.value\n  //   });\n  //   console.log(this.state);\n  // };\n  // onLoginSubmit = event => {\n  //   const { username, password } = this.state;\n  //   axios\n  //     .post(\n  //       \"http://localhost:3000\",\n  //       {\n  //         user: {\n  //           username: username,\n  //           password: password\n  //         }\n  //       },\n  //       {\n  //         withCredentials: true\n  //       }\n  //     )\n  //     .then(response => {\n  //       if (response.data.logged_in) {\n  //         this.props.handleSuccessfulAuth(response.data);\n  //       }\n  //     })\n  //     .catch(error => {\n  //       console.log(\"login error\", error);\n  //     });\n  //   event.preventDefault();\n  // };\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Responsive, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      centered: true,\n      columns: 2,\n      style: {\n        \"margin-top\": \"5vh\",\n        \"margin-bottom\": \"5vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      fluid: true,\n      className: \"card-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\"), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"\\u0E0A\\u0E37\\u0E48\\u0E2D\\u0E1C\\u0E39\\u0E49\\u0E43\\u0E0A\\u0E49\",\n      label: {\n        icon: \"user\"\n      },\n      labelPosition: \"left corner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"\\u0E23\\u0E2B\\u0E31\\u0E2A\\u0E1C\\u0E48\\u0E32\\u0E19\",\n      label: {\n        icon: \"lock\"\n      },\n      labelPosition: \"left corner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.onSubmit,\n      className: \"btn-paku\",\n      color: \"yellow\",\n      animated: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button.Content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\"), React.createElement(Button.Content, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"arrow right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })))))))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Kim/Documents/GitHub/FSIM/frontend/src/Components/Login.js"],"names":["React","Component","Form","Container","Button","Icon","Input","Grid","Modal","Loader","Responsive","Header","Divider","axios","SimpleReactValidator","Login","render","icon","onSubmit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Container,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n  Grid,\r\n  Modal,\r\n  Loader,\r\n  Responsive,\r\n  Header,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\n\r\nclass Login extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n\r\n  //   this.state = {\r\n  //     username: \"\",\r\n  //     password: \"\",\r\n  //     loginErrors: {}\r\n  //   };\r\n\r\n  //   this.handleSubmit = this.onSubmit.bind(this);\r\n  //   // this.handleChange = this.onInputChange.bind(this);\r\n  //   this.validator = new SimpleReactValidator({\r\n  //     validators: {\r\n  //       error: {\r\n  //         message: \"ชื่อผู้ใช้หรือรหัสผ่านผิด\",\r\n  //         rule: val => val == null\r\n  //       }\r\n  //     },\r\n  //     element: message => (\r\n  //       <div>\r\n  //         <Transition animation=\"shake\" duration={250} transitionOnMount={true}>\r\n  //           <Label basic color=\"red\" pointing>\r\n  //             {message}\r\n  //           </Label>\r\n  //         </Transition>\r\n  //         <br />\r\n  //       </div>\r\n  //     ),\r\n  //     message: {\r\n  //       required: \"โปรดระบุ:attribute\"\r\n  //     }\r\n  //   });\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   // document.title = \"FSIM - Login\";\r\n  //   // document.body.classList.add('Background-Brown');\r\n  //   if (this.props.location.state) {\r\n  //     // this.handleRegistModal();\r\n  //     this.props.history.replace({ state: false });\r\n  //   }\r\n  //   if (this.props.auth.isAuthenticated) {\r\n  //     this.props.history.push(\"/\");\r\n  //   }\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   if (nextProps.auth.isAuthenticated) {\r\n  //     this.props.history.push(\"/\");\r\n  //     // document.body.classList.remove('Background-Brown');\r\n  //   }\r\n  //   if (nextProps.errors) {\r\n  //     this.setState({ errors: nextProps.errors });\r\n  //   }\r\n  // }\r\n\r\n  // handleChange = input => e => {\r\n  //   this.setState({ [input]: e.target.value });\r\n  // };\r\n\r\n  // onSubmit(e) {\r\n  //   if (\r\n  //     this.validator.fieldValid(\"รหัสผ่าน\") &&\r\n  //     this.validator.fieldValid(\"ชื่อผู้ใช้\")\r\n  //   ) {\r\n  //     e.preventDefault();\r\n  //     // this.handleLoaderModal();\r\n  //     const userData = {\r\n  //       username: this.state.username,\r\n  //       password: this.state.password\r\n  //     };\r\n  //     this.props.loginUser(userData);\r\n  //     this.validator.showMessages();\r\n  //   } else {\r\n  //     this.validator.showMessages();\r\n  //     // rerender to show messages for the first time\r\n  //     // you can use the autoForceUpdate option to do this automatically`\r\n  //     this.forceUpdate();\r\n  //   }\r\n  // }\r\n\r\n  // onInputChange = event => {\r\n  //   this.setState({\r\n  //     [event.target.name]: event.target.value\r\n  //   });\r\n  //   console.log(this.state);\r\n  // };\r\n\r\n  // onLoginSubmit = event => {\r\n  //   const { username, password } = this.state;\r\n\r\n  //   axios\r\n  //     .post(\r\n  //       \"http://localhost:3000\",\r\n  //       {\r\n  //         user: {\r\n  //           username: username,\r\n  //           password: password\r\n  //         }\r\n  //       },\r\n  //       {\r\n  //         withCredentials: true\r\n  //       }\r\n  //     )\r\n  //     .then(response => {\r\n  //       if (response.data.logged_in) {\r\n  //         this.props.handleSuccessfulAuth(response.data);\r\n  //       }\r\n  //     })\r\n  //     .catch(error => {\r\n  //       console.log(\"login error\", error);\r\n  //     });\r\n  //   event.preventDefault();\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Responsive>\r\n          <Container>\r\n            <Grid\r\n              centered\r\n              columns={2}\r\n              style={{ \"margin-top\": \"5vh\", \"margin-bottom\": \"5vh\" }}\r\n            >\r\n              <Grid.Row>\r\n                <Grid.Column textAlign=\"center\" fluid className=\"card-login\">\r\n                  <Header as=\"h3\">เข้าสู่ระบบ</Header>\r\n                  <Divider />\r\n                  <Form>\r\n                    <Form.Field>\r\n                      <Input\r\n                        type=\"text\"\r\n                        placeholder=\"ชื่อผู้ใช้\"\r\n                        label={{ icon: \"user\" }}\r\n                        labelPosition=\"left corner\"\r\n                      />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                      <Input\r\n                        type=\"password\"\r\n                        placeholder=\"รหัสผ่าน\"\r\n                        label={{ icon: \"lock\" }}\r\n                        labelPosition=\"left corner\"\r\n                      />\r\n                    </Form.Field>\r\n                    <Divider />\r\n                    <div className=\"text-center\">\r\n                      <Button\r\n                        onClick={this.onSubmit}\r\n                        className=\"btn-paku\"\r\n                        color=\"yellow\"\r\n                        animated\r\n                      >\r\n                        <Button.Content visible>เข้าสู่ระบบ</Button.Content>\r\n                        <Button.Content hidden>\r\n                          <Icon name=\"arrow right\" />\r\n                        </Button.Content>\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </Responsive>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}